generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id        String    @id @default(uuid())
  clerkId   String    @unique
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  clients   Client[]
  programs  Program[]
}

model Client {
  id          String       @id @default(uuid())
  name        String
  email       String?
  phone       String?
  status      String       @default("active")
  lastVisit   DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  doctorId    String
  doctor      Doctor       @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  enrollments Enrollment[]

  @@index([doctorId])
}

model Program {
  id          String       @id @default(uuid())
  name        String
  description String?
  status      String       @default("active")
  startDate   DateTime
  endDate     DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  doctorId    String
  enrollments Enrollment[]
  doctor      Doctor       @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@index([doctorId])
}

model Enrollment {
  id        String    @id @default(uuid())
  clientId  String
  programId String
  startDate DateTime  @default(now())
  endDate   DateTime?
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  client    Client    @relation(fields: [clientId], references: [id], onDelete: Cascade)
  program   Program   @relation(fields: [programId], references: [id], onDelete: Cascade)

  @@unique([clientId, programId])
  @@index([clientId])
  @@index([programId])
}
